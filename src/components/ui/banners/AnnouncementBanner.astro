---
const { title, btnId, btnTitle, url } = Astro.props;

interface Props {
  title?: string;
  btnId: string;
  btnTitle: string;
  url: string;
}
---

<astro-banner btnId={btnId}>
  <div
    class="fixed bottom-0 start-1/2 z-50 mx-auto w-full -translate-x-1/2 transform p-6 sm:max-w-4xl"
    role="region"
    aria-label="Informational Banner"
  >
    <div class="relative rounded-xl bg-teal-300 p-4 text-center shadow-sm">
      <!-- SVG as background -->
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 1002 285"
        class="absolute inset-0 h-full w-full object-cover hidden sm:block"
        preserveAspectRatio="xMidYMid slice"
        style="pointer-events: none;"
      >
        <g>
          <polygon
            fill="#00b6aa"
            points="60,60 90,80 90,120 60,140 30,120 30,80"></polygon>
          <polygon
            stroke="#00b6aa"
            stroke-width="10"
            fill="none"
            points="800,50 830,70 830,110 800,130 770,110 770,70"></polygon>
          <polygon
            stroke="#00cfc2"
            stroke-width="20"
            fill="#00cfc2"
            points="750,150 780,170 780,210 750,230 720,210 720,170"></polygon>
          <polygon
            stroke="#00cfc2"
            stroke-width="10"
            fill="none"
            points="220,140 250,160 250,200 220,220 190,200 190,160"></polygon>
        </g>
      </svg>

      <div class="flex items-center justify-center">
        <div class="ml-auto">
          {
            title && (
              <p class="me-2 inline-block font-medium text-neutral-50">
                {title}
              </p>
            )
          }
          <a
            class="group inline-flex items-center gap-x-2 rounded-full border-2 border-neutral-50 backdrop-brightness-75 sm:backdrop-brightness-100 px-3 py-2 text-sm font-semibold text-neutral-50 transition duration-300 hover:border-neutral-100/70 hover:text-neutral-50/70 disabled:pointer-events-none disabled:opacity-50 mr-4 sm:mr-0"
            href={url}
            target="_blank"
          >
            {btnTitle}
            <svg
              class="size-4 flex-shrink-0 transition duration-300 group-hover:translate-x-1"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"><path d="m9 18 6-6-6-6"></path></svg
            >
          </a>
        </div>
        <button
          type="button"
          class="ml-auto inline-flex items-center gap-x-2 rounded-full border border-transparent bg-gray-100 p-2 text-sm font-semibold text-gray-800 hover:bg-gray-200 disabled:pointer-events-none disabled:opacity-50 dark:bg-neutral-200 hover:dark:bg-gray-300"
          id={btnId}
        >
          <span class="sr-only">Dismiss</span>
          <svg
            class="size-5 flex-shrink-0"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            ><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
          >
        </button>
      </div>
    </div>
  </div>
</astro-banner>
<script>
  class AstroBanner extends HTMLElement {
    connectedCallback() {
      const btnId = this.getAttribute("btnId");
      const button = this.querySelector(`#${btnId}`);
      if (button != null) {
        button.addEventListener("click", () => this.remove());
      }
    }
  }

  customElements.define("astro-banner", AstroBanner);
</script>
